count(cyl, name = "number") %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, number, n))
mtcars %>%
mtcars %>%
count(cyl, name = "number") %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, number, count)
mtcars %>%
count(cyl, name = "number") %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, number, count))
head(mtcars)
mtcars %>%
count(cyl, name = "number") %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, number, sum))
mtcars %>%
count(cyl, name = "number") %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, number, number))
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, mpg, mean))
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
summarize(mean_mpg = mean(mpg))
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
mutate(cyl = fct_reorder(cyl, mpg, mean)) %>%
group_by(cyl) %>%
summarize(mean_mpg = mean(mpg))
mtcars %>%
tally(cyl)
mtcars %>%
tally()
nrow(mtcars)
t <- tribble( ~id, ~value
, 1  , 101
, 1  , 102
, 2  , 201
, 3  , 301
, 3  , 302
, 3  , 303
, 4  , 401
)
t
t %>%
group_by( id ) %>%
summarise( counts=n(), sums=sum(value), lists=list(value) )
t %>%
group_by( id ) %>%
summarise( counts=n(), sums=sum(value), lists=list(value) ) %>% select(list.dirs())
t %>%
group_by( id ) %>%
summarise( counts=n(), sums=sum(value), lists=list(value) ) %>% select(lists)
t %>%
group_by( id ) %>%
summarise( counts=n(), sums=sum(value), lists=list(value) ) %>% select(list.dirs())
t %>%
group_by(id)
t %>%
group_by(id) %>%
tally()
t %>%
group_by(id) %>%
summarize(count = count(value))
t %>%
group_by(id) %>%
summarize(count = n())
t %>%
group_by(id) %>%
add_count()
t %>%
count(id)
t <- tribble( ~id, ~value
, 1  , 101
, 1  , 102
, 2  , 201
, 3  , 301
, 3  , 302
, 3  , 303
, 4  , 401
)
t
t %>%
count(id)
t %>%
group_by(id) %>%
tally()
t %>%
group_by(id)
t %>%
group_by(id) %>%
tally()
t %>%
group_by(id) %>%
tally() %>%
tally()
t %>%
group_by(id)
t %>%
group_by(id) %>%
add_count()
t %>% group_by(id) %>%
add_tally()
t %>% group_by(id) %>%
add_tally() %>%
tally()
t %>% group_by(id) %>%
add_tally() %>%
tally() %>%
tally()
t %>%
group_by(id)
t %>%
group_by(id) %>%
mutate(lists=list(value))
t %>%
group_by(id) %>%
mutate(lists=list(value)) -> x
x$lists[1]
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
summarize(mean_mpg = mean(mpg))
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
summarize(mean_mpg = mean(mpg))
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
count()
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
summarize(count = n())
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
summarize(count = n()) %>%
fct_reorder(cyl, count, sum)
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
summarize(count = n()) %>%
mutate(cyl = fct_reorder(cyl, count, sum))
head(mtcars)
mtcars %>%
mutate(cyl = as.factor(cyl)) %>%
group_by(cyl) %>%
summarize(count = n()) %>%
mutate(cyl = fct_reorder(cyl, count, n))
iris
iris %>%
order_by(Species) %>%
mutate(mean_pl = mean(Petal.Length))
iris %>%
arrange(desc(Petal.Length))
iris %>%
group_by(Species) %>%
mutate(mean_pl = mean(Petal.Length))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar("identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar()
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
fct_rev(Species) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
fct_rev(Species) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(2)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 2)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 1)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat = "identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 1))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 0))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 1))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 2))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 3))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_lump(Species, 4))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_relevel(Species, "versicolor"))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length))
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species = fct_rev(Species)) %>%
mutate(Species=fct_relevel(Species, "versicolor")) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat="identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species=fct_relevel(Species, "versicolor")) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat="identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species=fct_relevel(Species, "versicolor")) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat="identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat="identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species=fct_relevel(Species, "versicolor")) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat="identity")
iris %>%
group_by(Species) %>%
summarize(mean_pl = mean(Petal.Length)) %>%
mutate(Species=fct_relevel(Species, "virginica", "versicolor")) %>%
ggplot(aes(x=Species, y=mean_pl)) + geom_bar(stat="identity")
t <- tribble( ~state, ~value
, NY  , 101
, IL  , 102
, PA  , 201
, IA  , 301
, MI  , 302
, RI  , 303
, MA  , 401
)
t <- tribble( ~state, ~value
, "NY"  , 101
, "IL"  , 102
, "PA"  , 201
, "IA"  , 301
, "MI"  , 302
, "RI"  , 303
, "MA"  , 401
)
t
t %>%
mutate(state = as.factor(state))
t %>%
mutate(state = as.factor(state)) %>%
ggplot(aes(x=state, y=value)) + geom_bar(stat="identity")
t %>%
mutate(state = as.factor(state)) %>%
mutate(state = fct_reorder(state, value, mean))
t %>%
mutate(state = as.factor(state)) %>%
mutate(state = fct_reorder(state, value, mean)) %>%
ggplot(aes(x=state, y=value)) + geom_bar(stat="identity")
t %>%
mutate(state = as.factor(state)) %>%
# mutate(state = fct_reorder(state, value, mean)) %>%
mutate(state = fct_relevel(Species, "RI")) %>%
ggplot(aes(x=state, y=value)) + geom_bar(stat="identity")
t %>%
mutate(state = as.factor(state)) %>%
# mutate(state = fct_reorder(state, value, mean)) %>%
mutate(state = fct_relevel(state, "RI")) %>%
ggplot(aes(x=state, y=value)) + geom_bar(stat="identity")
t %>%
mutate(state = as.factor(state)) %>%
# mutate(state = fct_reorder(state, value, mean)) %>%
mutate(state = fct_lump(state, 5)) %>%
ggplot(aes(x=state, y=value)) + geom_bar(stat="identity")
t %>%
mutate(state = as.factor(state)) %>%
# mutate(state = fct_reorder(state, value, mean)) %>%
mutate(state = fct_lump(state, 5))
?wilcox.test
install.packages("installr")
library(installr)
updateR()
library(devtools)
devtools::install_github("nstrayer/datadrivencv")
library(devtools)
install.packages("devtools")
library(igraph)
devtools::install_github("nstrayer/datadrivencv")
library(dplyr)
library(rlang)
library(magrittr)
?left_join
library(tidyselect)
devtools::install_github("nstrayer/datadrivencv")
library(datadrivencv)
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Subhayan Mukerjee",
data_location = "https://docs.google.com/spreadsheets/d/1iNLvXGwg4sx3mWt_L1_IDwTImd7fSqi-ynM66TUjbrs/edit?usp=sharing",
pdf_location = "https://github.com/nstrayer/cv/final/strayer_cv.pdf",
html_location = "",
source_location = "https://github.com/wrahool/cv"
)
setwd("C:/Users/Subhayan/Documents/Work/cv/")
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Subhayan Mukerjee",
data_location = "https://docs.google.com/spreadsheets/d/1iNLvXGwg4sx3mWt_L1_IDwTImd7fSqi-ynM66TUjbrs/edit?usp=sharing",
pdf_location = "https://github.com/nstrayer/cv/final/strayer_cv.pdf",
html_location = "",
source_location = "https://github.com/wrahool/cv"
)
# Knit the HTML version
rmarkdown::render("cv.Rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
print_contact_info
print_contact_info()
print_contact_info
cv
setwd("C:/Users/Subhayan/Documents/Work/cv/")
# run ?datadrivencv::use_datadriven_cv to see more details
datadrivencv::use_datadriven_cv(
full_name = "Subhayan Mukerjee",
data_location = "https://docs.google.com/spreadsheets/d/1iNLvXGwg4sx3mWt_L1_IDwTImd7fSqi-ynM66TUjbrs/edit?usp=sharing",
pdf_location = "https://github.com/wrahool/cv/final/mukerjee_cv.pdf",
html_location = "",
source_location = "https://github.com/wrahool/cv"
)
---
title: "Subhayan Mukerjee's CV"
author: Subhayan Mukerjee
date: "`r Sys.Date()`"
params:
pdf_mode:
value: true
output:
pagedown::html_resume:
css: ['dd_cv.css', 'resume']
self_contained: true
---
```{r, include=FALSE}
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("CV_printing_functions.R")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1iNLvXGwg4sx3mWt_L1_IDwTImd7fSqi-ynM66TUjbrs/edit?usp=sharing",
pdf_location = "https://github.com/wrahool/cv/final/mukerjee_cv.pdf",
html_location = "",
pdf_mode = params$pdf_mode
)
```
```{r}
# Add some conditional CSS if in PDF mode needed due to quirks in chrome print rendering
CV %>% set_style()
```
Aside
================================================================================
```{r}
# Build interactive network of positions colored by section
# and connected if they occurred in the same year
datadrivencv::build_network_logo(CV$entries_data)
```
```{r}
CV %>% print_link_to_other_format()
```
Contact {#contact}
--------------------------------------------------------------------------------
```{r}
CV %>% print_contact_info()
```
Language Skills {#skills}
--------------------------------------------------------------------------------
```{r}
CV %>% print_skill_bars()
```
Disclaimer {#disclaimer}
--------------------------------------------------------------------------------
Made with the R package [**pagedown**](https://github.com/rstudio/pagedown).
The source code is available [on github.com/nstrayer/cv](https://github.com/wrahool/cv).
Last updated on `r Sys.Date()`.
Main
================================================================================
Subhayan Mukerjee {#title}
--------------------------------------------------------------------------------
```{r}
# Note the special double pipe so we modify the CV object in place
CV %<>% print_text_block("intro")
```
Education {data-icon=graduation-cap data-concise=true}
--------------------------------------------------------------------------------
```{r}
CV %<>% print_section('education')
```
Research Experience {data-icon=laptop}
--------------------------------------------------------------------------------
```{r}
CV %<>% print_section('research_positions')
```
Industry Experience {data-icon=suitcase}
--------------------------------------------------------------------------------
::: aside
```{r}
CV %<>% print_text_block('industy_experience_aside')
```
:::
```{r}
CV %<>% print_section('industry_positions')
```
<!-- These breaks just force a new page so section doesnt get cut off -->
<br>
<br>
<br>
Teaching Experience {data-icon=chalkboard-teacher}
--------------------------------------------------------------------------------
::: aside
```{r}
CV %<>% print_text_block('teaching_experience_aside')
```
:::
```{r}
CV %<>% print_section('teaching_positions')
```
Selected Data Science Writing {data-icon=chart-line}
--------------------------------------------------------------------------------
::: aside
```{r}
CV %<>% print_text_block('data_science_writing_aside')
```
:::
```{r}
CV %<>% print_section('data_science_writings')
```
Selected Press (About)  {data-icon=newspaper}
--------------------------------------------------------------------------------
```{r}
CV %<>% print_section('about_me_press')
```
<br>
<br>
Selected Press (By)  {data-icon=newspaper}
--------------------------------------------------------------------------------
```{r}
CV %<>% print_section('by_me_press')
```
Selected Publications, Posters, and Talks {data-icon=book}
--------------------------------------------------------------------------------
```{r}
CV %<>% print_section('academic_articles')
```
```{r}
CV %<>% print_links()
```
print_contact_info
print_link_to_other_format()
print_link_to_other_format
build_network_logo
